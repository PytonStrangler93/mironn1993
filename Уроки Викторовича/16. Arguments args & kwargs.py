#Существует 2 аргумента функции позиционные и именованые
#ПОЗИЦИОННЫЕ
def summa(a, b, c): 
    print(a + b + c)
summa(1, 2, 3)
#
def summa(a, b=7, c=8): #
    print(a + b + c)
summa(1)
#
def summa(a, b=7, c=8): #
    print(a + b + c)
summa(1, 80, 70) #ВОЗЬМЕТ ИЗ ВЫЗОВА ФУНКЦИИ условие проигнорирует
#ИМЕНованые АРГУМЕНТЫ
def summa(a, b=7, c=8): #
    print(a, b, c)
summa(c=1, b=80, a=70)
#Функция которая вычислит сумму всех аргументов переданных этой функции но заранее мы не знаем сколько там будет аргументов
#Оператор * способен вытаскивать из обьектов составляющие их элементов
# * может работать с обоими видами аргументов с позиционными ОДНА с именными ДВЕ!!!
#АРГС переводит в кортеж а КВАРГС переводит в пару ключ-значение (в СЛОВАРЬ)
def summa(*args): 
    print(type(args)) #проверка на тип (TUPLE-кортеж)
summa(7, 8, 9, 1, 10)
#
def summa(*numbers): 
    print(sum(numbers)) 
summa(7, 8, 9, 1, 10)
#ДЛЯ ИМЕНОВАНЫХ АРГУМЕНТОВ
def brand(**brands): 
    print(brands) 
brand(a='apple', s='samsung')
#разбивка по элементу-ключу в каждой строке
def brand(**brands): 
    for x, y in brands.items(): 
        print(x, ':', y)
brand(a='apple', s='samsung')
#Области видимости переменных глобальная существует в течении всего выполнения программы
#и локальная которая находится внутри функции
#Но существует их по факту 4
#ВСТРОЕННАЯ ОБЛАСТЬ ВИДИМОСТИ БИЛД ИН - встроенное пространство имен которое содержит имена всех встроенных обьектов которые доступны при работе с языком программирования
#import builtins
#print(dir(builtins))
#ГЛОБАЛ - глобальная переменная уровня модуля
#y = 2 #ГЛОБАЛЬНАЯ ПЕРЕМАННАЯ
#def degree(x):
#    return y ** x
#print(degree(4))
#ЛОКАЛ - создаются и используются внутри функции

def degree2(x):
    y = 2
    return y ** x

print(degree2(4))
# Чистый print(y) сейчас не сработает потому что локальная переменная удаляется из памяти сразу после отрабатывания функции
#ENCLOSIVE или обьемлющая переменная это функция вложенная в функцию
def degree3(x):
    y = 2
    def degree_und():
        return y ** x
    return degree_und()
print(degree3(4))

def message(number):
    def print_mess():
        return 'Number ' + str(number)
    return print_mess()
print(message(78))
# print(print_mess()) #Внутренняя функция скрыта принт ее не видит
# ЗАМыКАНИЕ Сохранение состояния при помощи внутренних функций
# С помощью замыкания локальная переменная не удаляется а сохраняетс до следующего вызова этой функции
# Замыкания Это динамически созданные функции которые возвращаются другими функциями
def message2(x):
    def print_mess2(y):
        return x, y
    return print_mess2

d = message2(4)
print(d) #выходит живая ссылка
print(d(8))

